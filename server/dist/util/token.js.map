{"version":3,"sources":["../../src/util/token.js"],"names":["generateToken","user","timeStamp","Date","getTime","payload","sub","id","iat","jwt","encode","config","jwt_secret","verifyToken","token","cb","decode","Error"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACXA,mBAAe,uBAAUC,IAAV,EAAgB;AAC3B,YAAMC,YAAY,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,YAAMC,UAAU;AACZC,iBAAKL,KAAKM,EADE;AAEZC,iBAAKN;AAFO,SAAhB;AAIA,eAAOO,oBAAIC,MAAJ,CAAWL,OAAX,EAAoBM,iBAAOC,UAA3B,CAAP;AACH,KARU;AASXC,iBAAa,qBAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AAC9B,YAAMC,SAASP,oBAAIO,MAAJ,CAAWF,KAAX,EAAkBH,iBAAOC,UAAzB,CAAf;AACA,YAAI,CAACI,MAAL,EAAa,OAAOD,GAAG,IAAIE,KAAJ,CAAU,wBAAV,CAAH,CAAP;AACbF,WAAG,IAAH,EAASC,MAAT;AACH;AAbU,C","file":"token.js","sourcesContent":["import jwt from 'jwt-simple';\nimport config from '../config';\n\nexport default {\n    generateToken: function (user) {\n        const timeStamp = new Date().getTime();\n        const payload = {\n            sub: user.id,\n            iat: timeStamp\n        }\n        return jwt.encode(payload, config.jwt_secret);\n    },\n    verifyToken: function (token, cb) {\n        const decode = jwt.decode(token, config.jwt_secret)\n        if (!decode) return cb(new Error('Token is not verified.'));\n        cb(null, decode);\n    }\n}"]}